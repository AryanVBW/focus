name: PR Check - Build, Test & Screenshot

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '18'

jobs:
  # Job 1: Build and Test Android App
  android-build-test:
    name: Android App - Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'gradle'

      - name: 🔧 Grant execute permission for gradlew
        working-directory: ./Focus-app
        run: chmod +x gradlew

      - name: 🧹 Clean build
        working-directory: ./Focus-app
        run: ./gradlew clean

      - name: 🏗️ Build Debug APK
        id: build_apk
        working-directory: ./Focus-app
        run: |
          ./gradlew assembleDebug --stacktrace
          echo "apk_path=$(find app/build/outputs/apk/debug -name '*.apk' | head -n 1)" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: 🧪 Run Unit Tests
        id: unit_tests
        working-directory: ./Focus-app
        run: ./gradlew testDebugUnitTest --stacktrace
        continue-on-error: true

      - name: 🔍 Run Lint Check
        id: lint_check
        working-directory: ./Focus-app
        run: ./gradlew lintDebug --stacktrace
        continue-on-error: true

      - name: 📊 Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-test-results
          path: |
            Focus-app/app/build/reports/tests/**/*
            Focus-app/app/build/test-results/**/*
          retention-days: 7

      - name: 📊 Upload Lint Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-lint-results
          path: Focus-app/app/build/reports/lint-results-*.html
          retention-days: 7

      - name: 📦 Upload APK
        if: steps.build_apk.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: focus-app-debug
          path: ${{ steps.build_apk.outputs.apk_path }}
          retention-days: 7

      - name: 💬 Comment on PR - Android Build Failed
        if: failure() && steps.build_apk.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const buildLog = `## ❌ Android Build Failed
            
            The Android app build has failed. Please check the logs for details.
            
            ### Build Information
            - **Commit**: ${{ github.event.pull_request.head.sha }}
            - **Branch**: ${{ github.event.pull_request.head.ref }}
            - **Workflow Run**: [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ### Next Steps
            1. Review the build logs in the workflow run
            2. Check for compilation errors or missing dependencies
            3. Ensure all Gradle configurations are correct
            4. Fix the issues and push your changes
            
            ---
            *This comment was automatically generated by the PR Check workflow.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: buildLog
            });

      - name: 💬 Comment on PR - Android Tests Failed
        if: steps.unit_tests.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const testLog = `## ⚠️ Android Unit Tests Failed
            
            Some unit tests have failed. Please review and fix them.
            
            ### Test Information
            - **Commit**: ${{ github.event.pull_request.head.sha }}
            - **Branch**: ${{ github.event.pull_request.head.ref }}
            - **Workflow Run**: [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ### Test Results
            Test results have been uploaded as artifacts. Download them from the workflow run to see detailed failure information.
            
            ### Next Steps
            1. Download the test results artifact
            2. Review failed test cases
            3. Fix the failing tests
            4. Push your changes
            
            ---
            *This comment was automatically generated by the PR Check workflow.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: testLog
            });

      - name: 📝 Set Android Status
        id: android_status
        if: always()
        run: |
          if [ "${{ steps.build_apk.outcome }}" == "success" ] && [ "${{ steps.unit_tests.outcome }}" == "success" ]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "message=✅ Build and tests passed" >> $GITHUB_OUTPUT
          elif [ "${{ steps.build_apk.outcome }}" == "failure" ]; then
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "message=❌ Build failed" >> $GITHUB_OUTPUT
          elif [ "${{ steps.unit_tests.outcome }}" == "failure" ]; then
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "message=⚠️ Tests failed" >> $GITHUB_OUTPUT
          else
            echo "status=success" >> $GITHUB_OUTPUT
            echo "message=✅ Build passed (tests skipped)" >> $GITHUB_OUTPUT
          fi

    outputs:
      status: ${{ steps.android_status.outputs.status }}
      message: ${{ steps.android_status.outputs.message }}
      apk_path: ${{ steps.build_apk.outputs.apk_path }}

  # Job 2: Build and Test Website
  website-build-test:
    name: Website - Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: Focus-site/package-lock.json

      - name: 📥 Install dependencies
        working-directory: ./Focus-site
        run: npm ci

      - name: 🔍 Run ESLint
        id: lint
        working-directory: ./Focus-site
        run: npm run lint
        continue-on-error: true

      - name: 🏗️ Build website
        id: build_site
        working-directory: ./Focus-site
        run: npm run build
        continue-on-error: true

      - name: 📦 Upload build artifacts
        if: steps.build_site.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: focus-site-dist
          path: Focus-site/dist
          retention-days: 7

      - name: 💬 Comment on PR - Website Build Failed
        if: failure() && steps.build_site.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const buildLog = `## ❌ Website Build Failed
            
            The website build has failed. Please check the logs for details.
            
            ### Build Information
            - **Commit**: ${{ github.event.pull_request.head.sha }}
            - **Branch**: ${{ github.event.pull_request.head.ref }}
            - **Workflow Run**: [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ### Common Issues
            - TypeScript/JavaScript compilation errors
            - Missing dependencies
            - Import/export errors
            - Vite configuration issues
            
            ### Next Steps
            1. Review the build logs in the workflow run
            2. Run \`npm run build\` locally to reproduce the error
            3. Fix the issues and push your changes
            
            ---
            *This comment was automatically generated by the PR Check workflow.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: buildLog
            });

      - name: 💬 Comment on PR - Lint Issues
        if: steps.lint.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const lintLog = `## ⚠️ ESLint Issues Found
            
            ESLint has found code quality issues in the website code.
            
            ### Lint Information
            - **Commit**: ${{ github.event.pull_request.head.sha }}
            - **Branch**: ${{ github.event.pull_request.head.ref }}
            - **Workflow Run**: [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ### Next Steps
            1. Run \`npm run lint\` locally to see all issues
            2. Fix the linting errors
            3. Consider running \`npm run lint -- --fix\` for auto-fixable issues
            4. Push your changes
            
            ---
            *This comment was automatically generated by the PR Check workflow.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: lintLog
            });

      - name: 📝 Set Website Status
        id: website_status
        if: always()
        run: |
          if [ "${{ steps.build_site.outcome }}" == "success" ]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "message=✅ Build passed" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "message=❌ Build failed" >> $GITHUB_OUTPUT
          fi

    outputs:
      status: ${{ steps.website_status.outputs.status }}
      message: ${{ steps.website_status.outputs.message }}

  # Job 3: Capture Website Screenshots
  capture-screenshots:
    name: Capture UI Screenshots
    runs-on: ubuntu-latest
    needs: website-build-test
    if: needs.website-build-test.outputs.status == 'success'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: Focus-site/package-lock.json

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: focus-site-dist
          path: Focus-site/dist

      - name: 📥 Install dependencies
        working-directory: ./Focus-site
        run: npm ci

      - name: 🌐 Install Playwright
        working-directory: ./Focus-site
        run: |
          npm install -D @playwright/test
          npx playwright install --with-deps chromium

      - name: 🚀 Start preview server
        working-directory: ./Focus-site
        run: |
          npm run preview &
          echo "PREVIEW_PID=$!" >> $GITHUB_ENV
          # Wait for server to be ready
          timeout 30 bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 1; done' || true
          sleep 5

      - name: 📸 Capture screenshots
        working-directory: ./Focus-site
        run: |
          cat > capture-screenshots.js << 'EOF'
          const { chromium } = require('@playwright/test');
          const fs = require('fs');
          const path = require('path');

          (async () => {
            const browser = await chromium.launch();
            const context = await browser.newContext({
              viewport: { width: 1920, height: 1080 }
            });
            const page = await context.newPage();

            // Create screenshots directory
            const screenshotsDir = path.join(__dirname, 'screenshots');
            if (!fs.existsSync(screenshotsDir)) {
              fs.mkdirSync(screenshotsDir, { recursive: true });
            }

            try {
              // Navigate to the site
              await page.goto('http://localhost:3000', { waitUntil: 'networkidle', timeout: 30000 });

              // Wait for content to load
              await page.waitForTimeout(2000);

              // Capture full page screenshot
              await page.screenshot({
                path: path.join(screenshotsDir, 'homepage-full.png'),
                fullPage: true
              });
              console.log('✅ Captured: homepage-full.png');

              // Capture viewport screenshot
              await page.screenshot({
                path: path.join(screenshotsDir, 'homepage-viewport.png'),
                fullPage: false
              });
              console.log('✅ Captured: homepage-viewport.png');

              // Capture mobile view
              await page.setViewportSize({ width: 375, height: 812 });
              await page.waitForTimeout(1000);
              await page.screenshot({
                path: path.join(screenshotsDir, 'homepage-mobile.png'),
                fullPage: true
              });
              console.log('✅ Captured: homepage-mobile.png');

              // Capture tablet view
              await page.setViewportSize({ width: 768, height: 1024 });
              await page.waitForTimeout(1000);
              await page.screenshot({
                path: path.join(screenshotsDir, 'homepage-tablet.png'),
                fullPage: true
              });
              console.log('✅ Captured: homepage-tablet.png');

              console.log('\n✨ All screenshots captured successfully!');
            } catch (error) {
              console.error('❌ Error capturing screenshots:', error);
              process.exit(1);
            } finally {
              await browser.close();
            }
          })();
          EOF

          node capture-screenshots.js

      - name: 🛑 Stop preview server
        if: always()
        run: |
          if [ ! -z "$PREVIEW_PID" ]; then
            kill $PREVIEW_PID || true
          fi
          # Kill any remaining node processes on port 3000
          lsof -ti:3000 | xargs kill -9 || true

      - name: 📦 Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: ui-screenshots
          path: Focus-site/screenshots/*.png
          retention-days: 30

      - name: 💬 Comment with screenshots
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');

            const comment = `## 📸 UI Screenshots Captured

            Screenshots of the Focus website have been captured successfully!

            ### Available Screenshots
            - 🖥️ **Desktop (Full Page)** - Complete homepage view
            - 🖥️ **Desktop (Viewport)** - Above-the-fold view
            - 📱 **Mobile (375x812)** - iPhone view
            - 📱 **Tablet (768x1024)** - iPad view

            ### How to View
            1. Go to the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            2. Scroll to the "Artifacts" section at the bottom
            3. Download the \`ui-screenshots\` artifact
            4. Extract and view the PNG files

            ### Screenshot Details
            - **Commit**: ${{ github.event.pull_request.head.sha }}
            - **Branch**: ${{ github.event.pull_request.head.ref }}
            - **Captured**: ${new Date().toUTCString()}

            ---
            *This comment was automatically generated by the PR Check workflow.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Job 4: Final Status Report
  final-status:
    name: Final Status Report
    runs-on: ubuntu-latest
    needs: [android-build-test, website-build-test, capture-screenshots]
    if: always()

    steps:
      - name: 📊 Generate Status Report
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const androidStatus = '${{ needs.android-build-test.outputs.status }}';
            const androidMessage = '${{ needs.android-build-test.outputs.message }}';
            const websiteStatus = '${{ needs.website-build-test.outputs.status }}';
            const websiteMessage = '${{ needs.website-build-test.outputs.message }}';
            const screenshotsStatus = '${{ needs.capture-screenshots.result }}';

            const getStatusEmoji = (status) => {
              if (status === 'success') return '✅';
              if (status === 'failure') return '❌';
              if (status === 'skipped') return '⏭️';
              return '⚠️';
            };

            const overallSuccess = androidStatus === 'success' && websiteStatus === 'success';
            const overallEmoji = overallSuccess ? '🎉' : '⚠️';

            const report = `## ${overallEmoji} PR Check Summary

            ### Build & Test Results

            | Component | Status | Message |
            |-----------|--------|---------|
            | 🤖 Android App | ${getStatusEmoji(androidStatus)} ${androidStatus} | ${androidMessage} |
            | 🌐 Website | ${getStatusEmoji(websiteStatus)} ${websiteStatus} | ${websiteMessage} |
            | 📸 Screenshots | ${getStatusEmoji(screenshotsStatus)} ${screenshotsStatus} | ${screenshotsStatus === 'success' ? 'Captured successfully' : screenshotsStatus === 'skipped' ? 'Skipped (build failed)' : 'Failed to capture'} |

            ### Overall Status
            ${overallSuccess ?
              '✅ **All checks passed!** This PR is ready for review.' :
              '⚠️ **Some checks failed.** Please review the errors above and fix them before merging.'}

            ### Details
            - **PR**: #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}
            - **Author**: @${{ github.event.pull_request.user.login }}
            - **Commit**: ${{ github.event.pull_request.head.sha }}
            - **Branch**: ${{ github.event.pull_request.head.ref }} → ${{ github.event.pull_request.base.ref }}
            - **Workflow Run**: [View Full Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### Artifacts
            ${androidStatus === 'success' ? '- 📦 [focus-app-debug.apk](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})' : ''}
            ${websiteStatus === 'success' ? '- 🌐 [focus-site-dist](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})' : ''}
            ${screenshotsStatus === 'success' ? '- 📸 [ui-screenshots](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})' : ''}

            ### Next Steps
            ${overallSuccess ?
              '1. Review the code changes\n2. Test the APK if needed\n3. Check the UI screenshots\n4. Approve and merge when ready' :
              '1. Review the error messages above\n2. Fix the failing checks\n3. Push your changes\n4. Wait for the checks to pass'}

            ---
            *This is an automated status report generated by the PR Check workflow.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });

      - name: ✅ Mark as Success
        if: needs.android-build-test.outputs.status == 'success' && needs.website-build-test.outputs.status == 'success'
        run: echo "All checks passed successfully!"

      - name: ❌ Mark as Failed
        if: needs.android-build-test.outputs.status == 'failure' || needs.website-build-test.outputs.status == 'failure'
        run: |
          echo "Some checks failed. Please review the errors."
          exit 1

